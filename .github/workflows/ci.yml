# Workflow syntax: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
# Triggers: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows

name: "Automatic build and deploy"
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

concurrency:
  group: cicd-recipes-riceprower
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: "Build & upload site artifact"
    runs-on: ubuntu-latest
    env:
      SITE_DIR: "_site"
      CONFIG_YML: "_config.yml"
      JEKYLL_ENV: "production"
      ENFORCE_HTTPS_IN_TESTS: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2

      # Start by building our JS/CSS static assets via Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Node assets
        run: |
          make install_node_modules

      # With assets built, build the site proper
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Build site
        run: make build

      # Run tests against the HTML output
      - name: Test site
        run: make test

      # If tests pass, upload the site artifact
      # (to be pulled in during deploy stage)
      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v1

  deploy:
    # Only run this job on main branch
    # (but run all prior jobs on all branches for CI purposes)
    if: github.ref == 'refs/heads/main'
    name: "Deploy site"
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  purge-cache:
    name: "Purge Cloudflare cache"
    needs:
      - deploy
    runs-on: ubuntu-latest
    steps:
      # Put steps here to build your site, deploy it to a service, etc.

      - name: Purge Cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0

        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_PURGE_CACHE_TOKEN }}
