# GitHub Action Workflow enforcing code style
# Borrowed and adapted from workflow designed for Python Discord Summer 2021 Code Jam

name: CI/CD

on:
  push:
  pull_request:
  schedule:
    - cron: "0 6 * * *" # daily at 6am UTC (roughly 1am US/Eastern)

concurrency: code-quality-${{ github.sha }}

jobs:
  linting:
    name: Code quality checks
    runs-on: ubuntu-latest

    env:
      # Set an environment variable to select pip's cache directory for us to actually cache between runs.
      PIP_CACHE_DIR: /tmp/pip-cache-dir
      # The Python version your project uses.
      PYTHON_VERSION: "3.10"

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Restore pip cache
        uses: actions/cache@v3
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "python-pip-${{ runner.os }}-\
            ${{ steps.python.outputs.python-version }}-\
            ${{ hashFiles('./pyproject.toml', './poetry.lock') }}"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies via Poetry
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Run pre-commit checks
        run: pre-commit run --all-files
        env:
          # Force pre-commit to do a system install.
          PIP_USER: 0

  docker_build_publish:
    name: Build and publish Docker image GHCR
    needs: linting
    runs-on: "ubuntu-latest"
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=edge

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Build image
      #   run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          # push to registry
          push: ${{ github.event_name != 'pull_request' }}
          # attempt to pull new images every time
          pull: true
          # ignore the cache (to avoid insecure cached layers)
          no-cache: ${{ github.event_name == 'schedule' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
